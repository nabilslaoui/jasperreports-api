#{"desc":"Nom du module","type":"string","ex":"module-type"}
api.name=jasperreports-api
#{"desc":"Description du module pour spécifier son utilité","type":"string","ex":"api pour la gestion des utilisateur de l'application"}
api.description=API pour la composition des rapports

#{"desc":"Port d'exposition de l'application","type":"int","min":"8080","max":"8099","defaut":"8080","ex":"8083"}
server.port=${jasperreports-api.server.port}

#{"desc":"URL d'exposition de l'application","type":"string","ex":"http://localhost"}
server.url=${jasperreports-api.server.url}

#{"desc":"Contexte tomcat d'accès à l'API (url)","type":"string"}
server.servlet.contextPath=/${api.name}

#{"desc":"Désactivation de la configuration automatique de l'accès à une base de données","type":"string","ex":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"}
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

#{"desc":"Chemin du fichier de configuration des logs","type":"string","ex":"classpath:logback-module-api.xml"}
logging.config=classpath:logback-jasperreports-api.xml
#{"desc":"Chemin du fichier des logs","type":"string","ex":"/var/log/<module_name>/<module_name>.log"}
logging.file.path=${jasperreports-api.logs.chemin}/${jasperreports-api.logs.nomFichier}
#{"desc":"Niveau de logs pour spring","type":"string","defaut":"DEBUG","ex":"INFO"}
logging.level.org.springframework=ERROR

#{"desc":"Logs appli","type":"","defaut":"DEBUG","ex":"INFO"}
logging.level.fr.gouv.diplomatie.application=${jasperreports-api.logging.level}
#{"desc":"Désactivation des endpoints de spring boot actuator par défaut","type":"boolean","defaut":"true","ex":"false"}
management.endpoints.enabled-by-default=false
#{"desc":"Activation du endpoint de santé de spring boot actuator","type":"boolean","defaut":"true","ex":"false"}
management.endpoint.health.enabled=true
#{"desc":"Configuration du endpoint de santé de spring boot actuator","type":"","defaut":"never","ex":"when_authorized"}
management.endpoint.health.show-details=when_authorized
#{"desc":"Configuration du endpoint de santé de spring boot actuator","type":"","defaut":"never","ex":"when_authorized"}
management.endpoint.health.show-components=when_authorized
#{"desc":"Désactivation des checkups du endpoint de santé de spring boot actuator par défaut","type":"boolean","defaut":"false","ex":"false"}
management.health.defaults.enabled=false
#{"desc":"Activation du checkup DB du endpoint de santé de spring boot actuator par défaut","type":"boolean","defaut":"false","ex":"true"}
management.health.db.enabled=true
#{"desc":"Activation du checkup diskspace du endpoint de santé de spring boot actuator par défaut","type":"boolean","defaut":"false","ex":"true"}
management.health.diskspace.enabled=true
#{"desc":"Configuration des urls de spring boot actuator","type":"String","defaut":"/actuator","ex":"/v1/admin"}
management.endpoints.web.base-path=/v1/admin

#{"desc":"Identifiant et mot de passe d'authentification à l'API (utilisé uniquement par les batchs)","type":"string","ex":"utilisateur:motdepasse"}
api.m2m.credentials=${api.m2m.credentials}
#{"desc":"Chaîne de caractères données pour générer le token JWT","type":"string","ex":"secret"}
api.m2m.jwt.secret=${api.m2m.jwt.secret}
#{"desc":"Délai d'expiration du token JWT en millisecondes","type":"int","ex":"86400000"}
api.m2m.jwt.delai.expiration-ms=${api.m2m.jwt.delai.expiration-ms}
#{"desc":"Identifiant et mot de passe d'authentification à l'API (utilisé  pour la supervision )","type":"string","ex":"utilisateur:motdepasse"}
api.supervision.credentials=${api.supervision.credentials}
#{"desc":"Chaîne de caractères données pour générer le token JWT pour la supervision ","type":"string","ex":"secret"}
api.supervision.jwt.secret=${api.supervision.jwt.secret}
#{"desc":"Délai d'expiration du token JWT pour la supervision en millisecondes","type":"int","ex":"86400000"}
api.supervision.jwt.delai.expiration-ms=${api.supervision.jwt.delai.expiration-ms}

#{"desc":"Ecrire les dates en format TimeStamps ","type":"boolean","defaut":true,"ex":"true"}
spring.jackson.serialization.write-dates-as-timestamps=true
#{"desc":"Lire les dates en format TimeStamps avec une précision en nanos","type":"boolean","defaut":false,"ex":"false"}
spring.jackson.deserialization.read-date-timestamps-as-nanoseconds=false
#{"desc":"Ecrire les dates en format TimeStamps avec une précision en nanos","type":"boolean","defaut":false,"ex":"false"}
spring.jackson.serialization.write-date-timestamps-as-nanoseconds=false
#{"desc":"Ignorer les properties inconnues dans JSON (Compatibilité ascendante) ","type":"boolean","defaut":false,"ex":"false"}
spring.jackson.deserialization.fail-on-unknown-properties=false

#{"desc":"Permet d'overrider des beans de spring","type":"boolean","defaut":"false","ex":"true"}
spring.main.allow-bean-definition-overriding=true